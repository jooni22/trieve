apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  labels:
    app.kubernetes.io/name: server
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: server
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: server
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: Helm
    spec:
      {{- if eq $.Values.environment "gcloud" }}
      serviceAccountName: cloud-postgres-service-account
      {{- end }}
      containers:
      - name: server
        resources:
          requests:
            cpu: 1
        image: {{ printf "%s%s:%s" (ternary "trieve/" "localhost:5000/" (ne .Values.environment "local")) "server" .Values.containers.server.tag }}
        ports:
          - containerPort: 8090
        env:
          - name: SENTRY_URL
            value: {{ .Values.config.vite.sentryChatDsn }}
          - name: ADMIN_API_KEY
            value: {{ .Values.config.trieve.adminApiKey }}
          - name: BASE_SERVER_URL
            value: {{ .Values.config.trieve.baseServerUrl }}
          - name: REDIS_URL
            value: {{ ( ternary "redis://:redis@trieve-redis-master.default.svc.cluster.local:6379" .Values.config.redis.uri (eq .Values.config.redis.useSubchart true)) }}
          - name: QDRANT_URL
            value: {{ ( ternary "http://trieve-qdrant.default.svc.cluster.local:6334" .Values.config.qdrant.qdrantUrl (eq .Values.config.qdrant.useSubchart true)) }}
          - name: QDRANT_API_KEY
            value: {{ .Values.config.qdrant.apiKey }}
          - name: QUANTIZE_VECTORS
            value: {{ .Values.config.qdrant.quantizeVectors | quote }}
          - name: REPLICATION_FACTOR
            value: {{ .Values.config.qdrant.replicationFactor | quote }}
          - name: VECTOR_SIZES
            value: {{ join "," .Values.config.qdrant.vectorSizes | quote }}
          - name: DATABASE_URL
            value: {{ ( ternary "postgres://postgres:password@trieve-postgresql.default.svc.cluster.local:5432" .Values.postgres.dbURI (eq .Values.postgres.useSubchart true)) }}
          - name: SMTP_RELAY
            value: {{ .Values.config.smtp.relay }}
          - name: SMTP_USERNAME
            value: {{ .Values.config.smtp.username }}
          - name: SMTP_PASSWORD
            value: {{ .Values.config.smtp.password }}
          - name: SMTP_EMAIL_ADDRESS
            value: {{ .Values.config.smtp.emailAddress }}
          - name: OPENAI_API_KEY
            value: {{ .Values.config.openai.apiKey }}
          - name: LLM_API_KEY
            value: {{ .Values.config.llm.apiKey }}
          - name: SECRET_KEY
            value: {{ .Values.config.trieve.secretKey | quote }}
          - name: SALT
            value: {{ .Values.config.trieve.salt }}
          - name: S3_ENDPOINT
            value: {{ .Values.config.s3.endpoint }}
          - name: S3_ACCESS_KEY
            value: {{ .Values.config.s3.accessKey }}
          - name: S3_SECRET_KEY
            value: {{ .Values.config.s3.secretKey }}
          - name: S3_BUCKET
            value: {{ .Values.config.s3.bucket }}
          - name: COOKIE_SECURE
            value: {{ .Values.config.trieve.cookieSecure | quote }}
          - name: TIKA_URL
            value: tika.default.svc.cluster.local
          - name: OPENAI_BASE_URL
            value: {{ .Values.config.openai.baseUrl }}
          - name: STRIPE_SECRET
            value: {{ .Values.config.stripe.secret }}
          - name: STRIPE_WEBHOOK_SECRET
            value: {{ .Values.config.stripe.webhookSecret }}
          - name: ADMIN_DASHBOARD_URL
            value: {{ .Values.config.trieve.adminDashboardUrl }}
          - name: OIDC_CLIENT_SECRET
            value: {{ .Values.config.oidc.clientSecret }}
          - name: OIDC_CLIENT_ID
            value: {{ .Values.config.oidc.clientId }}
          - name: OIDC_AUTH_REDIRECT_URL
            value: {{ .Values.config.oidc.authRedirectUrl }}
          - name: OIDC_ISSUER_URL
            value: {{ .Values.config.oidc.issuerUrl }}
          - name: GPU_SERVER_ORIGIN
            value: {{ .Values.config.trieve.gpuServerOrigin }}
          - name: SPARSE_SERVER_QUERY_ORIGIN
            value: {{ .Values.config.trieve.sparseServerQueryOrigin }}
          - name: SPARSE_SERVER_DOC_ORIGIN
            value: {{ .Values.config.trieve.sparseServerDocOrigin }}
          - name: EMBEDDING_SERVER_ORIGIN
            value: {{ .Values.config.trieve.embeddingServerOrigin }}
          - name: EMBEDDING_SERVER_ORIGIN_BGEM3
            value: {{ .Values.config.trieve.embeddingServerOriginBGEM3 }}
          - name: EMBEDDING_SERVER_ORIGIN_JINA_CODE
            value: {{ .Values.config.trieve.embeddingServerOriginJinaCode }}
          - name: JINA_CODE_API_KEY
            value: {{ .Values.config.trieve.jinaCodeApiKey }}
          - name: RERANKER_SERVER_ORIGIN
            value: {{ .Values.config.trieve.rerankerServerOrigin }}
          - name: UNLIMITED
            value: {{ .Values.config.trieve.unlimited | quote }}
          - name: REDIS_CONNECTIONS
            value: {{ .Values.config.redis.connections | quote }}
          - name: AWS_REGION
            value: {{ .Values.config.s3.region }}
          - name: CREATE_QDRANT_COLLECTIONS
            value: {{ .Values.qdrant.initCollections }}
      {{- if eq $.Values.environment "gcloud" }}
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL Auth Proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.8.0
        args:
          - "--structured-logs"
          - "--auto-iam-authn"
          # Replace DB_PORT with the port the proxy should listen on
          - "--port=5432"
          - "studious-lore-405302:us-west1:trieve-cloud"
        securityContext:
          # The default Cloud SQL Auth Proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        # You should use resource requests/limits as a best practice to prevent
        # pods from consuming too many resources and affecting the execution of
        # other pods. You should adjust the following values based on what your
        # application needs. For details, see
        # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          requests:
            # The proxy's memory use scales linearly with the number of active
            # connections. Fewer open connections will use less memory. Adjust
            # this value based on your application's requirements.
            memory: "2Gi"
            # The proxy's CPU use scales linearly with the amount of IO between
            # the database and the application. Adjust this value based on your
            # application's requirements.
            cpu:    "1"
      {{- end }}
