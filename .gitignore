/target
tantivy-recovery/target
*.env
.env.docker
tmp
node_modules
*.log
story_html
Fictions.csv
# Byte-compiled / optimized / DLL files
__pycache__
venv
*.py[cod]
*$py.class
.DS_Store
story_html.zip
testing.ipynb
output.json
temp.json
analytics/analytics-server/target
server/target
server/images
server/tantivy
*.icloud
chat/src/.root 2.css.icloud
tmp
temp
.venv
tantivy_index
rustc-ice*
tr-cli/sample-data
tr-cli/dist
sample-data
dashboard/.vite/*
helm/values.yaml
kubectl
*.swp
*.swo
helm/values.yaml
helm/.env
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

embedding-server/data/*
.turbo
